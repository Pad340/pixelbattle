package pixelbattle.UI;

import java.awt.HeadlessException;
import pixelbattle.connect.Connect;
import pixelbattle.classes.Warrior;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import pixelbattle.interfaces.Item;

public class WarriorCheck extends javax.swing.JFrame implements Item {

    private Warrior warrior = new Warrior();

    public WarriorCheck() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jLabel2 = new javax.swing.JLabel();
        name = new javax.swing.JTextField();
        jLabel3 = new javax.swing.JLabel();
        healthPoints = new javax.swing.JTextField();
        jLabel4 = new javax.swing.JLabel();
        attackPoints = new javax.swing.JTextField();
        jLabel5 = new javax.swing.JLabel();
        defensePoints = new javax.swing.JTextField();
        jLabel6 = new javax.swing.JLabel();
        strengthPoints = new javax.swing.JTextField();
        jLabel7 = new javax.swing.JLabel();
        speedPoints = new javax.swing.JTextField();
        itemsWarrior = new javax.swing.JComboBox<>();
        saveButton = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Foto do Gueirreiro");

        jLabel2.setText("Nome");

        name.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                nameActionPerformed(evt);
            }
        });

        jLabel3.setText("Pontos de Vida");

        healthPoints.setEditable(false);
        healthPoints.setText("100");
        healthPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                healthPointsActionPerformed(evt);
            }
        });

        jLabel4.setText("Pontos de Ataque");

        attackPoints.setEditable(false);
        attackPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                attackPointsActionPerformed(evt);
            }
        });

        jLabel5.setText("Pontos de Defesa");

        defensePoints.setEditable(false);
        defensePoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                defensePointsActionPerformed(evt);
            }
        });

        jLabel6.setText("For√ßa");

        strengthPoints.setEditable(false);
        strengthPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                strengthPointsActionPerformed(evt);
            }
        });

        jLabel7.setText("Velocidade");

        speedPoints.setEditable(false);
        speedPoints.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                speedPointsActionPerformed(evt);
            }
        });

        itemsWarrior.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "Itens", "Espada(Custo: 10 Hp)", "Escudo(Custo: 10 Hp)" }));
        itemsWarrior.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                itemsWarriorActionPerformed(evt);
            }
        });

        saveButton.setText("Atualizar Guerreiro");
        saveButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                saveButtonActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jLabel7)
                    .addComponent(speedPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(defensePoints, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel6)
                    .addComponent(strengthPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel5)
                    .addComponent(jLabel2)
                    .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3)
                    .addComponent(healthPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel4)
                    .addComponent(attackPoints, javax.swing.GroupLayout.PREFERRED_SIZE, 211, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, 233, Short.MAX_VALUE)
                .addContainerGap())
            .addGroup(layout.createSequentialGroup()
                .addGap(37, 37, 37)
                .addComponent(itemsWarrior, javax.swing.GroupLayout.PREFERRED_SIZE, 95, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(37, 37, 37)
                .addComponent(saveButton)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(jLabel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addGroup(layout.createSequentialGroup()
                        .addComponent(jLabel2)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(name, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(12, 12, 12)
                        .addComponent(jLabel3)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(healthPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel4)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(attackPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel5)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(defensePoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel6)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(strengthPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(jLabel7)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                        .addComponent(speedPoints, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addGap(18, 18, 18)
                .addGroup(layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(saveButton)
                    .addComponent(itemsWarrior, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addContainerGap(17, Short.MAX_VALUE))
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void nameActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_nameActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_nameActionPerformed

    private void healthPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_healthPointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_healthPointsActionPerformed

    private void attackPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_attackPointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_attackPointsActionPerformed

    private void defensePointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_defensePointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_defensePointsActionPerformed

    private void strengthPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_strengthPointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_strengthPointsActionPerformed

    private void speedPointsActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_speedPointsActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_speedPointsActionPerformed

    private void saveButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_saveButtonActionPerformed

        
    }//GEN-LAST:event_saveButtonActionPerformed

    private void itemsWarriorActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_itemsWarriorActionPerformed
        
    }//GEN-LAST:event_itemsWarriorActionPerformed

    public static void main(String args[]) {
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try
        {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels())
            {
                if ("Nimbus".equals(info.getName()))
                {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex)
        {
            java.util.logging.Logger.getLogger(WarriorCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex)
        {
            java.util.logging.Logger.getLogger(WarriorCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex)
        {
            java.util.logging.Logger.getLogger(WarriorCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex)
        {
            java.util.logging.Logger.getLogger(WarriorCheck.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new WarriorCheck().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JTextField attackPoints;
    private javax.swing.JTextField defensePoints;
    private javax.swing.JTextField healthPoints;
    private javax.swing.JComboBox<String> itemsWarrior;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JLabel jLabel5;
    private javax.swing.JLabel jLabel6;
    private javax.swing.JLabel jLabel7;
    private javax.swing.JTextField name;
    private javax.swing.JButton saveButton;
    private javax.swing.JTextField speedPoints;
    private javax.swing.JTextField strengthPoints;
    // End of variables declaration//GEN-END:variables

    private void printWarrior() {

        String query = "SELECT * FROM `tb_warrior`;";

        try
        {
            PreparedStatement preparacaoDaInstrucao = Connect.getConnect().prepareStatement(query);
            ResultSet result = preparacaoDaInstrucao.executeQuery();

            while (result.next())
            {
                this.warrior.setName(result.getString("name"));
                this.warrior.setHealthPoints(result.getInt("health_points"));
                this.warrior.setAttackPoints(result.getInt("attack_points"));
                this.warrior.setDefensePoints(result.getInt("defense_points"));
                this.warrior.setStrengthPoints(result.getInt("strength_points"));
                this.warrior.setSpeedPoints(result.getInt("speed_points"));
                System.out.println(warrior.toString());
            }
        } catch (SQLException exception)
        {
            Logger.getLogger(WarriorCheck.class.getName()).log(Level.SEVERE, null, exception);
            exception.printStackTrace();
        }
    }
    
    @Override
    public void equipItem(Character name, int itemId) {
        
        
        
    }

    @Override
    public void updateCharacterStats(int characterId, int healthPoints, int modifiedAttack, int modifiedDefense) {

    }
}
